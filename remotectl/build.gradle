apply plugin: 'com.android.application'

static def getCreateTime() {
    def createTime = new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00")).trim()
    return createTime
}

static def getGitSHA() {
    def gitSHA = 'git rev-parse --short HEAD'.execute().text.trim()
    return gitSHA
}

static def getGitCommitCount() {
    def gitCommitCount = 'git rev-list --count HEAD'.execute().text.trim();
    return gitCommitCount;
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.flyzebra.remotectl"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode gitCommitCount.toInteger()
        versionName "v1.0."+gitSHA+"."+createTime
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("../keystore/vlte.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        debug {
            storeFile file("../keystore/vlte.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled true //混淆
            zipAlignEnabled true//Zipalign优化
            shrinkResources true// 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "${applicationId}_release_${versionName}_${gitCommitCount}.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "${applicationId}_debug_${versionName}_${gitCommitCount}.apk"
            }
            outputFileName = fileName;
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.google.android.exoplayer:exoplayer:r2.2.0'
    implementation project(path: ':rtmplib')
}
